<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSEhUTExMVFRUXFxUXGBgXFxcVFRgXFxUXFxcXFxcd
        HSggGBolHRcVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhcQEBctHR0dLS0tLS0tLS0tLS0t
        LS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLTc3NzctNy03LS0tLTf/wAARCACnAS4DASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAAAQACAwQFBgf/xAA1EAACAQIEBAQFAwMFAQAAAAAAAQIDEQQFEiExQVFh
        EyJxgQYykbHBodHwI0LhFBVScqJi/8QAGQEBAAMBAQAAAAAAAAAAAAAAAAECAwQF/8QAIBEBAQEBAAID
        AQEBAQAAAAAAAAECEQMxEhMhQVFhIv/aAAwDAQACEQMRAD8A8SZZgitFXZaRIcEamK4DhATHXAIRtxXI
        DrgQAokOuBgbFcBCCkECKQEOmgJAIcAKALEESASQrBSDYBomFisA0XIcBIBoGPSBYAAsFrgIBtiGcdyy
        yKcQIgD3AbYAAuOsCwDRDhAKlHmSobTiSpIBqDpHNiAKiLQIQC0h0iTFcBKIhyYgAINgNAJBFYADagEg
        1BIBJBSEh8UAFEdGJaweBqVNoQcrdFt9TdwPwfUlvOShvw+bYi6kWzi305pRE0ek4b4Lw6j5tU2+rt9i
        08mw9JeWlG/Vq/3KXyxpPBXlujoHw30f0PRv9PCNrRjt2XUVLQnqe75dF/kfYfS84lTa4pr2G6T0upmF
        K27h9yjVo0an9lOV+asPn/xP099VwOkFtzsK2Q0pcE4+jM7F/Dco/JK/Z/uTPJEXw6jnWGxPicNKG0ot
        P9CG25dlZw3oCSHchsuYQhqIZYmqIj0gMsGwdIkgAkGwUBsCRcApiSHJEABCohSJAQUGwUgAkFoQUgBY
        Q5oVgG2CwgAQQJD9AEdSI2xJNbDUBJRoyk0oq76G9gvh+fGcPbl7jsn0UoKTW73/AGRvf1p03UvojyS+
        Z+vQztt/I2ziSdpYSUqaskl2RZhj2ndqyuUsLN3gtc//AKvsl5tknfzXW/DY1s6oU18jcloTcrWtLfyv
        ry37mWst8trCVU49Sjj6lyrllV6bdhmIqbkcbzJYvDtJX2T/AFNHJsJStduLnZ8beV9lyKtKrqVnvbgJ
        4a7uM/lV3js4ya+XTu4KMW4yc9S+Zxtp0p3s473txHf6GLcfLZpLdbN+pvUKFlsxrpL3L611njxcquqE
        UkU8SkXqtNlGvTM+N+SRlY6jGWzV0c1meW+HvHh06HV10UsXQ1IvnVjm8mZXHuPIZJcT0SGV0q9OKmkn
        1WzSS6nMZh8OyTk6T1xXs/bqazXWN8N52MCQxolqRabvtbrxEo9yzFCxD6kQWAZYbYlaFYA2DYKRLSpO
        TslcCNBSN/LMi1bzduyOloZZTjG0YJexnrySNM+O158qUujHRpyeyi32SvwV/tc7n/aoOXmjxLMcls9U
        HZ2aVtuK0vhyabT9SZvqb4nn9LCTl8sW/TsJ4aa4xl9GehrBRVNQ0LVx13s22OoYGTje26K68vFp4ez9
        ebyiCx6lQy+M1aUIv1SKeP8Ahqhv/T0vs2hPNC+C/wAec2A0dDivh219E/Zr8mRisHOm7SX5RpNy+mVx
        YghYUroSFcsqU3dEaY+QxIDpMNhNVKEuaSf0OgyzFVErbW7r8GPkMv6cTepwMLbK7cZ+UT4VaXsld9iD
        NarUbFmk+XMp5vB2Ia/HkWMvnZD5WbBgF5UKuiW8n4nw9OzNHwrK6KeAqJmsrEWqWqbkx0KN+JZ0If4f
        IhXvFKpSKGJpmxUgZuK4hF0wMQtyJRLeJgQyWxDKll0U21KTUe3MvVaSV3FproQZdocXGXG90Vs1rRpp
        u/D9S0/WuJ/565L4kadZtdNzKUGWMRiNUnJ87ldzNo8/d7bT3RfNoSobDdYPEYVHwe41wXUTmC4G5kGS
        ePu3aN7bcX+xu47C06UtFNJJW+33OQy3N6lH5Xs+x0OBqOdOE27uTk3f/sympe9XnOca2A5GzQgZOBjY
        28OjHTq8Zzok1OmSwViaMEvUr6aXMVZ4JMir1FBNL0LmKqNIx6ivIe0caOXSIs2r7P6D8PLSipmUrxY4
        tc/h1bBx0R5L0vcqZnhXU0SUINR4q20t07Nc72szWyyalTSDVppcNvsWxeMtZ64WeRwkpyb0S/tils3x
        e3Je5ztak4tp7NHpmIi+iMevlsZX1b3NfsY68TiBkkWcZQdObj0ZWZr7YOk+FKt4uL5P7/xnVUnt3PPc
        mxnhVlfhLZ+vI9BwdTgZbnK6vDr84t0Vy/lyPOoWpvq2kvqT4eO5Xz+LcYpcnuUdN9Dl1JtJLiWcdhHB
        uMlZ80zPwmM0NJ7PaxPWryqy4tt8WyzWaVYpp7G3ga+uPdbGcsHtxbf6GjgKOiNr3KUsi3CRO3sVZ9R6
        qdx1lqBVf1MvEPe5fxUtjMnK4Z1Wcb7lSsrI0ZRsiliI8F3HVKy6u0rdjk84qS17ttcrts63Gx3uc3nN
        C/mNMe2W+8ZKQg2BY1YAJgVwP+bhAgFv+BJgRo6zJXenBdn92ctJHSfDTvFLuyuvS2PbqMLHY18KyhCn
        aK7s0KEtJz2uvK/FbdyWn3Ksbv0C3tYp1op5vmFnpiZuHk27sdiIrxHq24E6nGNrcP5wLcWnE8KlkUMd
        UNRUqco3Ts+jMvHW3SdyVr6aeTx8t+pbrwK+RSvTReqxKf1WM6rTM7Fxsma1ZGNmVSyZaRTbks9ot/1L
        bXtfvyMaR0edYuCoeHtq1an2OXrT2OrPpw69onPe53PwzmWuCT4rY4JGlkeK0VFvs9vfkNTsTjXK9Vw8
        yOtUbfbfYo5ditURuMxFl6mHHdnSRQTlyNDXGFjn1iFHi/yWKOJbtaL3dk3t9yfjWs5P62XiUSU8SZFW
        VVcZU49nLf7FP/cKl+F+63XsR8V5ZfTq1UuKD3MHBY2T5M2MNVv2K6nGdSYllGnEtYuZBRIZa9m1UUq/
        H0NCSKFXiFaoYyn5TCx6ioy1Oytt/g3s1rxpwvJ/57I4nG4t1Hd7dF0NPHLWO7xUaG2HNgOhzmX/AJ7A
        clb6CmiNkCZtfz0FTtzsQphVSwDqhtfDFS0mu9/qY9ZblrKKumou+xGp+Jzf16ZB+WHqWqHmdzMwlbVT
        XY0MJO0LnJp159rjqWT3KtSrcr4upO3lt7mfSzGV7aHf6iTrWdacoa7NxHVKDcdLe3LsUaeY9SanmC6o
        tyxfnUbwklxk7dhipu3lg9+N2ty5/rk+NiPxF1Itp8F3Lqbgkr78X7mhGaMqhW3LVV7XXIp/Vabi52Rz
        ea1NjbzGd9KXP7HJ/E+J0wa6+Ve/H9DXE6w8mvxyOJruU5SvxbZBJiYGdLlAdF2GsVyR2uRZhdKXtL16
        m5j8PqgmnbvxPOssxvhzv/a9mux3mX45Siovfo+xjuc/W/j11n0t76t+SsTeDJu6buXKmBUneOzH0MFN
        87EfJ6Hj8mOfsQ0MG21qdo3ab4267F2pCGyhe3V8WSUsv6yb9C/h8Co8F9St3E3yf4ZhqFluWIpp9h0l
        YbcztZ29RV+I9diNPcMpEdZ0qsrGdWrxinKTskTY2ukt3tzOFznNHWe20U3Zde7L4z8mPk1wzN8ylXld
        7JfKu3czZMMhrOqTkctvTQBASgGiCUWTsagK4idoboAsVVfgPw9F7MCZbitkB1GTYq8V+pu4N7OP0OIy
        uvplbk/udfgKt7P2ObyZ46MaX5R2sjGm3GV4uzN1cSnjsLfdGefx043/AKhyvF6l4c7PzJ95JeuzZr4j
        CYeTs4aers4/+lsc+6aW0l7jpSb/AL2/Vu5pyJvi7e5q5j8uoRvprKLtdJu99+H3MdylF2i1L7Ek6a9W
        T4fCNvcfkW+Pxn7erGBcnvKxq15eQbRhFKxSzPF22Rn7rG2QzFYhK8ui0r8nnefY3xKnaO3vzN3OsytH
        Qnv+/wCTlcVGzv1Onx55HLvXfxAxMTAzRQGIQgCjcyDMNL0N/wDV9H0MIlpwfIizqZeV6Th6l0aVNbI4
        nIs33UZvfh6nX4WqpM5tZsrr8eutqhBItU3faxSpV+THrEW9SvG6zOCKWIVh88Uiji8UuFyEW8B1bJsq
        4rFqCu3Yr47MI043kzjczzOVaW+0eS/ctjHyY+TySRPnGbuq7K6j9/UyWxSYxnVJxx22jcawBJQFwMLA
        wGsDDYTYA4DGG4LAXqdMevKMcrMl1pkoPTOgyPH38r4nNXt6EtGq4tNFdZ7Fs65XptCWpIseFdHO5BmS
        lZc+Z0kKhyanK6s3qCeCT5FWWXrma8Z9xlUjtaxmxwqQpqxcqJNXsUsTXjHfoP2qatDEV9Ee5gYms3eT
        LEpSqyvyM/P68acdF92a5yw1euYlJyk23xI8VvZEqSQI07u7OhipeE+QXRfoaTaRVxEmwlAoIb4Y+LEw
        goQ6FqMbAowsiR7AMlCO7balby25vv2NfJs9cdp8uf7mG5X3GOVnfqRZKtnVnp6Ths2hJX1L2Y6eaLkz
        zmEh6rPhd/Uz+tr91dvXzXq0vcy8TnsVfT5n+hzVSbGayZ44rfLVnF4uVR6pO/bkiu5DNQC8nGdvTrgA
        FEoJCYgNgIC3EkOAbca7DmhAMBYe0NaAutAsLmGT3CCTHRkCLHWJE2GxDg7xdmdTlvxGmkpbP9Gce4BV
        yusyrZ1Z6elYfMovg0S1Mcup5nTrOL2bXuyy8TL/AJP6mf1NfuruquYLgt32KywUpvVUdl0/dnFwxkob
        xnJX42Yytj6ktpVJNdHJtfcfVxW+Trp82zynSWijZy6r5V+7OSr1W25Sd2/qMUiObNM5kUurRcmw05Mi
        ch1PgyVVhsgrxG6miSM01bqEqpNRhfchmrE9GWwFmESPEvkiaBUqyu2A1AkxXAmALW3RNCzTbdmlt3d1
        +LkMmSRT8N7bOSV+eye3/pEJTYyg6U3CVm1bhw3Sf5IJInzDESqVJTmkpStLZJL5Vbb0SK8SQLBYgBAi
        A2ABXFpCkBgG4hWHWAAgiAaNY9oCQD4zVyTWuohBBa0PU11CIkPdRDXNCEBH4iuPdRbbiEQG+IgOURCJ
        SY2uoXFf8v0EIBulc2HUhCIQhlJCuhCAOtc9wRkk9mIQSt0qyS4/cquQhANlJBUkIQDJSJsNJW9wiAjq
        NXBrVxCAOoTmhCAGoWpCEAth10IRAOpC1IQiQNaDqQhADUgSkIQH/9k=
</value>
  </data>
</root>